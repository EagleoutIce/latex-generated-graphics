%% block icon network generator package
%% Florian Sihler, 2021-03-14
\ProvidesPackage{blk-ico-net}[2021/03/14 v1.0 blk icon network generator package]
\newif\ifbinet@setup@cpalette@
\DeclareOption{cpalette}{\binet@setup@cpalette@true}
\DeclareOption{nocpalette}{\binet@setup@cpalette@false}
\newif\ifbinet@setup@gradient@
\DeclareOption{gradient}{\binet@setup@gradient@true}
\DeclareOption{nogradient}{\binet@setup@gradient@false}
\newif\ifbinet@setup@pathfade@
\DeclareOption{pathfade}{\binet@setup@pathfade@true}
\DeclareOption{nopathfade}{\binet@setup@pathfade@false}
\newif\ifbinet@setup@frameblock@
\DeclareOption{frameblock}{\binet@setup@frameblock@true}
\DeclareOption{noframeblock}{\binet@setup@frameblock@false}
\DeclareOption{debug}{\let\binet@debug\typeout}
\DeclareOption{nodebug}{\let\binet@debug\@gobble}
\let\binet@debug\@gobble
\ProcessOptions*
\RequirePackage{tikz,etoolbox}
\usetikzlibrary{backgrounds,decorations.markings}
\RequirePackage{blk-ico-net@register,blk-ico-net@debug}

\RequirePackage{blk-ico-net@matrix}
\RequirePackage{blk-ico-net@block}
\RequirePackage{blk-ico-net@routing}

\def\binet@init#1{%
    \pgfkeys{/binet@keys,defaults,#1}%
    \setcounter{binet@block@count}\z@
}

\newif\if@binet@deadcycles@reached@
\newcommand*\blkIcoRandomNet[1][]{\blkIcoNet[#1]{
    \setcounter{binet@block@a}\z@
    \@whilenum\value{binet@block@a}<\binet@block@max@count\do{%
        \binet@draw@single@block
        \advance\c@binet@block@a\@ne
    }
    \@binet@deadcycles@reached@false
    % now ensure minimum is met
    \setcounter{binet@block@a}\z@
    \@whilenum\value{binet@block@count}<\binet@block@min@count\do{%
        \binet@draw@single@block
        \advance\c@binet@block@a\@ne
        \ifnum\value{binet@block@a}>\binet@block@deadcycles@count\relax
            \PackageWarning{blk-ico-net}{Deadcycles reached.}
            \edef\binet@tmpbc{\arabic{binet@block@count}}%
            \setcounter{binet@block@count}{\binet@block@min@count}%
            \@binet@deadcycles@reached@true
        \fi
    }
    \if@binet@deadcycles@reached@\setcounter{binet@block@count}{\binet@tmpbc}\fi
    \binet@debug@show@matrix% Debug :)
    \binet@route@lines
}}

\newenvironment{blk@rootlayer}{\begin{pgfonlayer}{background}}{\end{pgfonlayer}}

\newcommand\blkIcoNet[2][]{\begingroup
\binet@init{#1}%
\begin{tikzpicture}[x=1pt,y=1pt,scale=\binet@scale]
    \let\get\binet@getblock
    \let\setblock\binet@setblock
    \let\setblockrand\binet@setblockrand
    \binet@calcdiffs% 1)
    \binet@setup@matrix% 2)
    \def\binet@outer@path{(-\binet@padding@x,-\binet@padding@y) rectangle (\binet@width+\binet@padding@x,\binet@height+\binet@padding@y)}
    \path[use as bounding box,\if@binet@drawframe binet@frame\fi]\binet@outer@path;
    \path[clip,binet@outer@roundings] \binet@outer@path;
    \if@binet@drawgrid\begin{pgfonlayer}{background}
        \path[clip,binet@outer@roundings] \binet@outer@path;
        \draw[binet@grid] (-\binet@padding@x,-\binet@padding@y) grid (\binet@width+\binet@padding@x,\binet@height+\binet@padding@y);
    \end{pgfonlayer}\fi
    \let\debugmatrix\binet@debug@show@matrix
    \let\autoroot\binet@route@lines
    \let\block\binet@fronte@draw@block
    \let\root\binet@dl@root
    \let\rootlayer\blk@rootlayer
    \let\endrootlayer\endblk@rootlayer
    #2
\end{tikzpicture}%
\endgroup}
\endinput